{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","serverName","serverDescription","servers","push","type","name","content","onAddServer","onAddBluePrint","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  serverName = '';\n  serverDescription = '';\n\n  servers = [];\n\n\n  onAddServer() {\n    this.servers.push({\n      type: 'server',\n      name: this.serverName,\n      content: this.serverDescription\n    });\n  }\n\n  onAddBluePrint() {\n\n    this.servers.push({\n      type: 'bluePrint',\n      name: this.serverName,\n      content: this.serverDescription\n    });\n\n  }\n}\n","<div class=\"container\">\n\n  <br>\n  <div class=\"col-xs-12\">\n    <div class=\"row\">\n\n      <div class=\"col-xs-3\">\n        <label>Server Name : </label>\n      </div>\n\n      <div class=\"col-xs-9\">\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"serverName\">\n      </div>\n    </div>\n\n    <br>\n\n\n    <div class=\"row\">\n      <div class=\"col-xs-3\">\n        <label>Server Description : </label>\n      </div>\n\n      <div class=\"col-xs-9\">\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"serverDescription\">\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"row\">\n      <div class=\"col.xs-12\">\n        <div class=\"col-xs-3\">\n\n        </div>\n        <div class=\"col-xs-9\">\n          <div class=\"btn-toolbar\">\n            <button class=\"btn btn-primary\" (click)=\"onAddServer()\">Add Server</button>\n            <button class=\"btn btn-primary\" (click)=\"onAddBluePrint()\">Add Blue Print</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <hr>\n\n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      <div class=\"panel panel-default\" *ngFor=\"let element of servers\">\n        <div class=\"panel-heading\">{{element.name}}</div>\n        <div class=\"panel-body\" [ngStyle]=\"{'color' : element.type === 'server' ? 'red' : 'blue'}\">{{element.content}}\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n    \n  ],\n  imports: [\n    BrowserModule,FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}